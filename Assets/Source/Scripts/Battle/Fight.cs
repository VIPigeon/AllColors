using UnityEngine;

public enum FightState {
    WaitingForPlayerToSpawnHisFirstPokemon,
    PlayerTurn,
    EnemyTurn,
}

// –ï—Å—Ç—å –±–∞–≥–∏: –∏–≥—Ä–æ–∫ –º–æ–∂–µ—Ç—å –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞ –∞—Ç–∞–∫—É / –∏–≥—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã –∫–æ–≥–¥–∞ —É–≥–æ–¥–Ω–æ.
// –ù—É–∂–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –∏–≥—Ä–æ–∫–∞ ‚ùåüóΩ
//
// –ü–æ —Ö–æ—Ä–æ—à–µ–º—É –º—ã —Å–ø–∞–≤–Ω–∏–º –±–æ–π —á–µ—Ä–µ–∑ Instantiate –∏ –ø—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º
// –≤ –Ω–µ–≥–æ –≤—Å–µ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è. –≠—Ç–æ —Ç–æ –∫–∞–∫ —è –≤–∏–∂—É üñå
public class Fight : MonoBehaviour {
    // –î–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤:
    // FightArea -- parent,
    // PlayerPokemonSpawnPoint -- –ø–æ–∑–∏—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ FightArea
    public GameObject FightArea;
    public Transform PlayerPokemonSpawnPoint;

    public FightState State;
    public FullDeck FullPlayerDeck;
    public Hand PlayerHand;

    public Pokemon playerPokemon;
    public Pokemon enemyPokemon;

    private void Start() {
        State = FightState.WaitingForPlayerToSpawnHisFirstPokemon;

        PlayerHand.FillFrom(FullPlayerDeck);
        foreach (CardView cardView in PlayerHand.CardViews) {
            cardView.Clicked += OnCardPlayed;
        }
    }

    public void SwapPlayerPokemon(Pokemon newPokemon) {
        switch (State) {
            case FightState.WaitingForPlayerToSpawnHisFirstPokemon:
                playerPokemon = newPokemon;
                State = FightState.PlayerTurn;
                break;
            case FightState.PlayerTurn:
                Destroy(playerPokemon.gameObject);
                playerPokemon = newPokemon;
                break;
            case FightState.EnemyTurn:
                Debug.LogWarning("–ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å –∫–∞—Ä—Ç—ã –≤–æ –≤—Ä–µ–º—è —Ö–æ–¥–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞");
                break;
            default:
                Debug.LogError("–ß—Ç–æ –∑–∞ —Å—Ç–µ–π—Ç?");
                break;
        }
    }

    public void OnEnemyDamageAnimationFinished(Pokemon enemy) {
        if (State != FightState.EnemyTurn) {
            Debug.LogError("–í–æ—Ç —Ç–∞–∫–æ–≥–æ –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ. –ù–∞–ø–∏—à–∏—Ç–µ kawaii-Code");
            return;
        }

        enemyPokemon.DamageAnimationFinished -= OnEnemyDamageAnimationFinished;
        enemyPokemon.Attack(playerPokemon);

        if (playerPokemon.Health.IsZero) {
            State = FightState.WaitingForPlayerToSpawnHisFirstPokemon;
        } else {
            State = FightState.PlayerTurn;
        }
    }

    public void PlayerPressedTheAttackButton() {
        if (State != FightState.PlayerTurn) {
            Debug.LogWarning("–ê—Ç–∞–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è.");
            return;
        }

        enemyPokemon.DamageAnimationFinished += OnEnemyDamageAnimationFinished;
        playerPokemon.Attack(enemyPokemon);
        State = FightState.EnemyTurn;
    }

    private void OnCardPlayed(CardView cardView) {
        Card card = cardView.CardThatWeCurrentlyDisplay;

        // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –∑–¥–µ—Å—å, –Ω–æ —É–∂–µ 22 —á–∞—Å–∞ –Ω–æ—á–∏, –∞ —è –≤ –ø–æ–µ–∑–¥–µ –≤—Ç–æ—Ä–æ–π —á–∞—Å
        // –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É—é (–∏–ª–∏ 3-–∏–π), –∫–æ—Ä–æ—á–µ –Ω–µ–º–Ω–æ–≥–æ —É—Å—Ç–∞–ª, —Å–∞–º–∏ –ø–æ—Ç–æ–º –ø–æ—á–∏–Ω–∏—Ç–µ
        // –∏–ª–∏ –ø–æ–¥—É–º–∞–π—Ç–µ –∫–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ª—É—á—à–µ üòú
        //
        // –£–∂–µ 23 —á–∞—Å–∞ –Ω–æ—á–∏, –∏ —è —ç—Ç–æ –ø–æ—á–∏–Ω–∏–ª. –û—Å—Ç–∞–≤–ª—é –∑–¥–µ—Å—å —Ä–∞–¥–∏ –∏—Å—Ç–æ—Ä–∏–∏.
        //
        // –°–µ–π—á–∞—Å –ø–æ–ª–Ω–æ—á—å, —á—Ç–æ-—Ç–æ –º–Ω–µ –Ω–µ –æ—á–µ–Ω—å –Ω—Ä–∞–≤–∏—Ç—Å—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å—é–¥–∞ –≤—å—é—à–∫—É,
        // –Ω–æ —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –º–Ω–µ –ø–æ—Ñ–∏–≥. –ú—ã –∂–µ –Ω–∞ –¥–∂–µ–º –∏–≥—Ä—É –¥–µ–ª–∞–µ–º. –î–∞ –∏ –≤–æ–æ–±—â–µ,
        // —Ö–æ—á—É –ø—Ä–æ—Ü–µ–¥—É—Ä–Ω—ã–π –∫–æ–¥ –ø–∏—Å–∞—Ç—å. –≠—Ö—Ö—Ö... üòõ
        PlayerHand.PlayCard(cardView);

        if (card.Pokemon == null) {
            Debug.LogError("–°–ø–µ–ª–ª—ã –µ—â—ë –Ω–µ —Å–¥–µ–ª–∞–Ω—ã");
        } else {
            Pokemon pokemon = Instantiate(card.Pokemon, FightArea.transform);
            pokemon.transform.position = PlayerPokemonSpawnPoint.position;
            SwapPlayerPokemon(pokemon);
        }
    }
}
